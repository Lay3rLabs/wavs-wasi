name: Publish wavs-wasi-utils to crates.io
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'

env:
  CRATE_NAME: wavs-wasi-utils
  CRATE_PATH: packages/wavs-wasi-utils

jobs:
  publish_crate:
    name: Verify and Publish Crate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Extract Crate Version
        id: version
        shell: bash
        run: |
          # Extract version from Cargo.toml using cargo read-manifest and jq
          VERSION=$(cargo read-manifest --manifest-path ${{ env.CRATE_PATH }}/Cargo.toml | jq -r .version)
          
          # Ensure the tag name matches the version from Cargo.toml
          if [ "$VERSION" != "${{ github.ref_name }}" ]; then
              echo "Error: Tag name '${{ github.ref_name }}' does not match version '$VERSION' from Cargo.toml"
              exit 1
          fi
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if crate exists
        id: crate_exists
        shell: bash
        run: |
          # Get the HTTP status code when checking if the crate exists
          # We expect either 200 (exists) or 404 (doesn't exist)
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            https://crates.io/api/v1/crates/${{ env.CRATE_NAME }}/${{ steps.version.outputs.version }})
          
          # Handle status codes appropriately
          if [ "$HTTP_STATUS" = "200" ]; then
            # Crate exists
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Crate ${{ env.CRATE_NAME }} version ${{ steps.version.outputs.version }} already exists"
          elif [ "$HTTP_STATUS" = "404" ]; then
            # Crate doesn't exist - we're good to publish
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Crate ${{ env.CRATE_NAME }} version ${{ steps.version.outputs.version }} not found - OK to publish"
          else
            # Any other status code is unexpected and should fail the workflow
            echo "Error: Received unexpected HTTP status $HTTP_STATUS when checking if crate exists"
            exit 1
          fi

      - name: Display version information
        run: |
          echo "Publishing version: ${{ steps.version.outputs.version }}"
          echo "Crate exists on crates.io: ${{ steps.crate_exists.outputs.exists }}"
      
      - name: Run cargo package
        if: steps.crate_exists.outputs.exists == 'false'
        uses: actions-rs/cargo@v1
        with:
          command: package
          args: --manifest-path ${{ env.CRATE_PATH }}/Cargo.toml
      
      - name: Publish to crates.io
        if: steps.crate_exists.outputs.exists == 'false'
        uses: actions-rs/cargo@v1
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        with:
          command: publish
          args: --manifest-path ${{ env.CRATE_PATH }}/Cargo.toml