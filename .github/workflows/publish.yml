name: Publish Tag

on:
  push:
    tags:
      - '^v\d+\.\d+\.\d+(-[a-zA-Z]+\.\d+)?$'

env:
  CRATE_NAME: wavs-wasi-utils
  CRATE_PATH: packages/wavs-wasi-utils

jobs:
  publish_crate:
    name: Verify and Publish Crate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Extract Crate Version
        id: version
        shell: bash
        run: |
          VERSION=$(cargo read-manifest --manifest-path ${{ env.CRATE_PATH }}/Cargo.toml | jq -r .version)
          TAG_VERSION="${{ github.ref_name#v }}"
          if [ "$VERSION" != "$TAG_VERSION" ]; then
              echo "Error: Tag version 'v$TAG_VERSION' does not match Cargo.toml version '$VERSION'"
              exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if crate exists
        id: crate_exists
        shell: bash
        run: |
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://crates.io/api/v1/crates/${{ env.CRATE_NAME }}/${{ steps.version.outputs.version }})
          if [ "$HTTP_STATUS" = "200" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          elif [ "$HTTP_STATUS" = "404" ]; then
            echo "exists=false" >> $GITHUB_OUTPUT
          else
            echo "Error: Unexpected status $HTTP_STATUS"
            exit 1
          fi

      - name: Run cargo package
        if: steps.crate_exists.outputs.exists == 'false'
        uses: actions-rs/cargo@v1
        with:
          command: package
          args: --manifest-path ${{ env.CRATE_PATH }}/Cargo.toml

      - name: Publish to crates.io
        if: steps.crate_exists.outputs.exists == 'false'
        uses: actions-rs/cargo@v1
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        with:
          command: publish
          args: --manifest-path ${{ env.CRATE_PATH }}/Cargo.toml

  publish_wasm:
    name: Publish WASM to wa.dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache Cargo binaries
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin
          key: cargo-bin-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install wkg
        run: cargo install wkg

      - name: Build wit
        run: wkg wit build

      - name: Extract version from tag
        id: get_version
        run: |
          echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Publish wasm to wa.dev
        run: |
          version="${{ steps.get_version.outputs.version }}"
          wkg publish "wavs:worker@$version.wasm"
